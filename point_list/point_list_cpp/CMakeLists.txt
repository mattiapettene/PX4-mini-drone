cmake_minimum_required(VERSION 3.8)
project(point_list_cpp)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(px4_msgs REQUIRED)
find_package(px4_ros_com REQUIRED)

# offboard_point_ctrl.cpp
add_executable(offboard_point_ctrl src/offboard_point_ctrl.cpp)
ament_target_dependencies(offboard_point_ctrl rclcpp std_msgs px4_msgs px4_ros_com) 
install(TARGETS offboard_point_ctrl DESTINATION lib/${PROJECT_NAME})

# offboard_velocity_ctrl.cpp
add_executable(offboard_velocity_ctrl src/offboard_velocity_ctrl.cpp)
ament_target_dependencies(offboard_velocity_ctrl rclcpp std_msgs px4_msgs px4_ros_com) 
install(TARGETS offboard_velocity_ctrl DESTINATION lib/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
